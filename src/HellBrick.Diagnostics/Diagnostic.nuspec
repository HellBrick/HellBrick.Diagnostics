<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
	<metadata>
		<id>HellBrick.Diagnostics</id>
		<version>0.0.0.0</version>
		<title>HellBrick.Diagnostics</title>
		<authors>HellBrick</authors>
		<owners>HellBrick</owners>
		<projectUrl>https://github.com/HellBrick/HellBrick.Diagnostics</projectUrl>
		<requireLicenseAcceptance>false</requireLicenseAcceptance>
		<description>Diagnostics</description>
		<releaseNotes>
			v1.4.3:
			- changed diagnsotic IDs to provide compatibility with VS 2015 update 1
			
			v1.4.2:
			- an attempt to fix the FormattingAnalyzer warning issued on VS loading it from a nuget package
			
			v1.4.1:
			- merged in the analyzer that enforces ConfigureAwait()
			- fixed a bunch of bugs
			
			v1.4.0:
			- an analyzer that enforces explicit access modifiers
			- an analyzer that enforces immutability and equatability on structs
			- all analyzers ignore auto-generated code
			
			v1.3.0:
			- an analyzer that enforces the proper code formatting
			- a refactoring to convert one-line properties to expression-bodied properties
			
			v1.2.1:
			- fixed Nuget package installation issues
			- readonly modifier can now be enforced on fields of primitive types
			- var can be converted to explicit type inside the using declaration block
			- var can no longer be converted if it's generic type with anonymous arguments
			- conversion to expression-bodied member is no longer suggested for the methods that can't be converted
			- the reference is no longer considered unused if a method that returns a type declared in it is invoked
			
			v1.2.0:
			- a refactoring to convert String.Format() call to an interpolated string
			- a refactoring to convert var to explicit type name and back
			
			v1.1.0:
			- unused project references are reported to the error/information list
			
			v1.0.2:
			- upgraded to VS 2015 RTM

			v1.0.1:
			- readonly modifier is no longer enforced on value type fields (to avoid SpinLock-like issues)

			v1.0.0:
			- enforce readonly modifier on fields
			- convert one-line methods to expression-bodied methods</releaseNotes>
		<tags></tags>
	</metadata>
	<!-- The convention for analyzers is to put language agnostic dlls in analyzers\dotnet and language specific analyzers in either analyzers\dotnet\cs or analyzers\dotnet\vb -->
	<files>
		<file src="*.dll" target="analyzers\dotnet\cs" exclude="**\Microsoft.CodeAnalysis.*;**\System.Collections.Immutable.*;**\System.Reflection.Metadata.*;**\System.Composition.*" />
		<file src="tools\*.ps1" target="tools\" />
	</files>
</package>